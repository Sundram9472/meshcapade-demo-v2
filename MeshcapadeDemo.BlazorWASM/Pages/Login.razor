@page "/Login"
@using System.Text
@using Newtonsoft.Json
@inject HttpClient HttpClient
@inject GlobalVariablesService GlobalVars
<PageTitle>SignIn</PageTitle>
<Toasts class="p-3" Messages="messages" AutoHide="true" Delay="6000" Placement="ToastsPlacement.TopRight" />
<div class="login-main">
    <div class="inner-left">
        <div class="inner-left-up">
            <img src="img/images.jpeg" />
            <h4 class="cus-heading-mesh text-bold">meshcapade</h4>
            <p class="cus-heading-mesh">me</p>
        </div>
        
        <div class="inner-left-down">
            <div class="email">
                <label class="lbl-bold">Email address</label>
                <input type="email" @bind-value="email" required />
            </div>
            <div class="password">
                <label class="lbl-bold">Password</label>
                <input type="password" @bind-value="password" required />
            </div>
            <div class="login-btn">
                <Button @onclick="UserLogin" class="btn btn-info">Login</Button>
            </div>
        </div>
    </div>
    <div class="inner-right">
        <img src="img/cover-mesh.png" />
    </div>
</div>
@code{
    private string? email;
    private string? password;
    List<ToastMessage> messages = new List<ToastMessage>();
    private void ShowMessage(ToastType toastType, string message, string title) => messages.Add(CreateToastMessage(toastType, message, title));

    private ToastMessage CreateToastMessage(ToastType toastType, string message, string title)
    => new ToastMessage
        {
            Type = toastType,
            Title = title,
            Message = message,
        };

    private async Task UserLogin()
    {
        var request = new
        {
            Username = email,
            Password = password

        };
        var content = new StringContent(JsonConvert.SerializeObject(request), Encoding.UTF8, "application/json");
        var response = await HttpClient.PostAsync($"api/login", content);
        var loginResponse =await response.Content.ReadFromJsonAsync<LoginResponse>();
        if(response.IsSuccessStatusCode)
        {
            var token = loginResponse.access_token;
            GlobalVars.Token = token;
        }
        else
        {
            ShowMessage(ToastType.Danger, "Invalid username or password. !", "Error");
        }
    }
}